{
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "createDefaultProgram": true
  },
  "env": {
    "es6": true,
    "browser": true,
    "node": true
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "rules": {
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array-simple"
      }
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/ban-tslint-comment": "error",
    "@typescript-eslint/brace-style": [
      "error",
      "1tbs"
    ],
    "@typescript-eslint/comma-dangle": [
      "error",
      "always-multiline"
    ],
    "@typescript-eslint/comma-spacing": "error",
    "@typescript-eslint/consistent-indexed-object-style": "error",
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "allow"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/func-call-spacing": "error",
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "ignoredNodes": [
          "FunctionExpression > .params[decorators.length > 0]",
          "FunctionExpression > .params > :matches(Decorator, :not(:first-child))",
          "ClassBody.body > PropertyDefinition[decorators.length > 0] > .key"
        ],
        "SwitchCase": 1
      }
    ],
    "@typescript-eslint/init-declarations": "off",
    "@typescript-eslint/keyword-spacing": "error",
    "@typescript-eslint/lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi"
        },
        "singleline": {
          "delimiter": "semi"
        },
        "overrides": {
          "typeLiteral": {
            "multiline": {
              "delimiter": "comma"
            },
            "singleline": {
              "delimiter": "comma"
            }
          }
        }
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "protected-static-field",
          "private-static-field",
          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",
          "constructor",
          "public-instance-method",
          "protected-instance-method",
          "private-instance-method"
        ]
      }
    ],
    "@typescript-eslint/method-signature-style": "error",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-invalid-this": "error",
    "@typescript-eslint/no-shadow": "warn",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never"
      }
    ],
    "@typescript-eslint/space-infix-ops": "error",
    "@typescript-eslint/strict-boolean-expressions": [
      "off",
      {
        "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": true
      }
    ],
    "@typescript-eslint/type-annotation-spacing": "error",
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "arrow-spacing": "error",
    "brace-style": "off",
    "comma-dangle": "off",
    "comma-spacing": "off",
    "default-param-last": "off",
    "dot-notation": "off",
    "eol-last": [
      "error",
      "always"
    ],
    "eqeqeq": [
      "error",
      "always"
    ],
    "func-call-spacing": "off",
    "id-blacklist": "error",
    "import/newline-after-import": "error",
    "import/no-extraneous-dependencies": "error",
    "import/order": [
      "error",
      {
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "groups": [
          ["builtin", "external"],
          "unknown",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "pathGroups": [
          {
            "group": "unknown",
            "pattern": "~common/**"
          },
          {
            "group": "internal",
            "pattern": "~platform/**"
          },
          {
            "group": "internal",
            "pattern": "~portal/**"
          }
        ]
      }
    ],
    "indent": "off",
    "init-declarations": "off",
    "key-spacing": "error",
    "keyword-spacing": "off",
    "lines-between-class-members": "off",
    "max-len": [
      "error",
      {
        "code": 150,
        "comments": 250,
        "ignoreComments": true,
        "ignorePattern": "queryRunner.query|\/\/",
        "ignoreStrings": true
      }
    ],
    "max-lines": [
      "warn",
      500
    ],
    "no-array-constructor": "off",
    "no-extra-semi": "error",
    "no-fallthrough": [
      "error",
      {
        "commentPattern": "break[\\s\\w]*omitted"
      }
    ],
    "no-duplicate-case": "error",
    "no-irregular-whitespace": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1
      }
    ],
    "no-multi-spaces": "error",
    "no-new-func": "error",
    "no-redeclare": "error",
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          "lodash",
          "lodash/get",
          {
            "name": "child_process",
            "importNames": ["execFile"]
          },
          {
            "name": "typeorm",
            "importNames": ["getManager", "EntityManager", "getConnection"]
          },
          {
            "name": "dayjs",
            "importNames": ["date"]
          }
        ]
      }
    ],
    "no-return-await": "error",
    "no-sequences": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-trailing-spaces": "error",
    "no-unused-expressions": "error",
    "object-curly-newline": [
      "error",
      {
        "multiline": true
      }
    ],
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true
      }
    ],
    "object-shorthand": [
      "error",
      "always"
    ],
    "operator-linebreak": [
      "error",
      "before"
    ],
    "padded-blocks": [
      "error",
      "never"
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      }
    ],
    "prefer-arrow-callback": "error",
    "prefer-arrow/prefer-arrow-functions": "off",
    "prefer-object-spread": "error",
    "semi": [
      "error",
      "always"
    ],
    "space-before-blocks": "error",
    "space-before-function-paren": "off",
    "space-infix-ops": "off",
    "space-in-parens": [
      "error",
      "never"
    ],
    "spaced-comment": [
      "error",
      "always",
      {
        "line": {
          "markers": ["/"],
          "exceptions": ["-", "+"]
        },
        "block": {
          "markers": ["!"],
          "exceptions": ["*"],
          "balanced": true
        }
      }
    ]
  }
}
